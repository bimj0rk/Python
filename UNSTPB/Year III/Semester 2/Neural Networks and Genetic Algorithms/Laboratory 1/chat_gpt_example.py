import numpy as npx = [[1, 0], [2, 0], [3, 0], [0, 1], [0, 2]]nExamples = np.size(x, 0)nInputs = np.size(x, 1) + 1T = np.array([[0], [0], [1], [0], [1]])def myOutput(W, X):    N = np.dot(X, W)    return(N >= 0)X = np.ones([nExamples, nInputs])X[:, :-1] = np.array(x)W = np.array([[1],[1],[1]])error = 1 while error != 0:    error = 0    for example in range(nExamples): #for loop - gradient - matrix multiplication        n = np.dot(X[example, :], W)        y = n >= 0        e = T[example] - y        dW = np.reshape(X[example, :] * e, [nInputs, 1])        W = W + dW        print(W)        print('-------------')        error = error + np.abs(e) #abs - for sum of errors (check lecture for this)    print('===============')        print(myOutput(W, X))#casters are very useful